//-------------------------------------------------------------------
// 	Solution Overview
//-------------------------------------------------------------------

The code in this solution is an implementation of an algorithm 
described in the paper "Modeling and Rendering Realistic Textures 
from Unconstraned Tool-Surface Interactions," by HeatherCulbertson, 
Juliette Unwin, and Katherine J. Kuchenbecker.  

This paper describes two things:
	1.  How to measure properties of real world surfaces.  If you 
		drag an object across a surface, the object will experience
		vibrations and other forces that vary with the speed of 
		movement and force applied.  These are complex relationships; 
		it's not a simple linear relationship between speed, force, 
		and vibrations.  The first part of the paper describes 
		building a fancy data structure that stores various object 
		properties.

	2.  How to use the fancy data structure described above to create 
		a force wave that represents the vibrations you should feel 
		as a function of speed and force as you move an object across 
		a surface.

//-------------------------------------------------------------------
// 	Stored Material Data
//-------------------------------------------------------------------

In the folder build, you will see two folders filled with xml files 
that were populated with a data collection and filtering approach 
(also described in above paper).  At runtime, we will read these in 
and build the datastructures we need to calculate things like 
vibrations and transient force (the tapping force you feel when you 
first make contact with a surface)

IMPORTANT:

In order to load them at runtime, THIS FOLDER MUST BE PLACED IN THE 
DIRECTORY OF EXECUTION.  This is a short-term solution, as these xml 
files will eventually live in a separate database that will grow and 
change.  For now, the data will be loaded in autoGenHashMatrix.h

//-------------------------------------------------------------------
// 	Using the DLL 
//-------------------------------------------------------------------

The class that exposes the force-wave generation functionality is 
TexturesDLL.cpp and TexturesDLL.h.  To use this dll, you will wrap 
the header file, TexturesDLL.h.  It exposes the following functions:

	void calculateTap( float tapSpeed, float* buffer )

		float tapSpeed: Surface contact speed (in millimeters per 
						second) along surface normal
		float* buffer: 100 element float array to be populated with 
					   tap force

		Calculates the feedback generated by making contact with a 
		surface.  That is, when we first touch an object, we get a 
		little kick back based on impact speed.  This force will not 
		be applied all at once, rather over 100ms, hence the 100 
		element float array populated by this method. 

	void init()

		Initializes data structures for textures in build folder.  
		Must be called before any other functions.

	void setTextureNumber( int textureNumber )

		int textureNumber: The ID of the the texture we want to touch 
						   (currently a number between 0 and 99 
						   because we have 100 textures)

		Sets the current texture being simulated


	void updateMovement( float tangentSpeed, float normalForce )

		float tangentSpeed: The speed (in millimeters per second) of 
							movement across the surface of our 
							texture.  That is, the tangent speed.
		float normalForce: The force (in Newtons) of contact.  How 
						   hard we pushing on the surface.

		The forcewave that we will generate will be a function of 
		speed and force.  We must regularly update these parameters.  
		This does not have to be called as often as vibrations().

	double vibrations()

		Returns the next element in the forcewave generated from 
		movement across a surface.  This function must be called at 
		1000Hz (1000 times a second) to deliver realistic results.
